from opcode import opname
import os
from pydub import AudioSegment
from gtts import gTTS 
import elevenlabs
from elevenlabs.client import ElevenLabs
import subprocess
import platform

# GTTS Function to convert text to speech
def text_to_speech_with_gtts_old(input_text, output_filepath):
    language = 'en'
    
    audioj = gTTS(text=input_text, lang=language, slow=False)
    
    audioj.save(output_filepath)
            
input_text = "I am testing the voice of the doctor, which is generated by the AI model. This is a test message."
# text_to_speech_with_gtts_old(input_text=input_text,
#     output_filepath=r"C:\Users\Muhammad_Talha\Documents\AI_Doctor_Voice_Chat_Bot\doctor_voices\gtts_output.mp3")

# ElevenLabs Function to convert text to speech

ELEVENLABS_API_KEY = os.environ.get('ELEVENLABS_API_KEY')

def text_to_speech_with_elevenlabs_old(input_text ,output_filepath):
    client = ElevenLabs(api_key = ELEVENLABS_API_KEY)
    audio = client.generate(
        text = input_text,
        voice = "Callum",
        output_format= "mp3_22050_32" ,
        model= "eleven_turbo_v2",
    )
    elevenlabs.save(audio, output_filepath)
# text_to_speech_with_elevenlabs_old(input_text=input_text,
#        output_filepath=r"C:\Users\Muhammad_Talha\Documents\AI_Doctor_Voice_Chat_Bot\doctor_voices\output_11.mp3")

     
        
def text_to_speech_with_gtts(input_text, output_filepath):
    language = 'en'
    
    audioj = gTTS(text=input_text, lang=language, slow=False)
    
    # Save as MP3 first
    audioj.save(output_filepath)
    
    # Convert MP3 to WAV with the same name
    wav_filepath = output_filepath.replace('.mp3', '.wav')
    audio = AudioSegment.from_mp3(output_filepath)
    audio.export(wav_filepath, format='wav')
   
    os_name = platform.system()
    try:
        if os_name == "Darwin":
            subprocess.run(["afplay", output_filepath])
        elif os_name == "Linux":
                subprocess.run(["aplay", output_filepath])
        elif os_name == "Windows":
                # Use the WAV file for Windows playback
                subprocess.run(["powershell", '-c', f'(New-object Media.SoundPlayer "{wav_filepath}").PlaySync();' ])
        else:
                print("Unsupported OS")
    except Exception as e:
            print(f"Error playing audio: {e}")
            
input_text = "I am testing the voice of the doctor, which is generated by the AI model. This is a test message."
# text_to_speech_with_gtts(input_text=input_text,
#     output_filepath=r"C:\Users\Muhammad_Talha\Documents\AI_Doctor_Voice_Chat_Bot\doctor_voices\gtts_output_automatic.mp3")




ELEVENLABS_API_KEY = os.environ.get('ELEVENLABS_API_KEY')

def text_to_speech_with_elevenlabs(input_text ,output_filepath):
    client = ElevenLabs(api_key = ELEVENLABS_API_KEY)
    audio = client.generate(
        text = input_text,
        voice = "Callum",
        output_format= "mp3_22050_32" ,
        model= "eleven_turbo_v2",
    )
    elevenlabs.save(audio, output_filepath)
    
    # Convert MP3 to WAV with the same name
    wav_filepath = output_filepath.replace('.mp3', '.wav')
    audio = AudioSegment.from_mp3(output_filepath)
    audio.export(wav_filepath, format='wav')
   
    os_name = platform.system()
    try:
        if os_name == "Darwin":
            subprocess.run(["afplay", output_filepath])
        elif os_name == "Linux":
                subprocess.run(["aplay", output_filepath])
        elif os_name == "Windows":
                # Use the WAV file for Windows playback
                subprocess.run(["powershell", '-c', f'(New-object Media.SoundPlayer "{wav_filepath}").PlaySync();' ])
        else:
                print("Unsupported OS")
    except Exception as e:
            print(f"Error playing audio: {e}")
    
input_text_11 = "I am testing the voice of the doctor, which is generated by the AI model. This is a test message of ElevelLAbs."

text_to_speech_with_elevenlabs(input_text=input_text_11,
       output_filepath=r"C:\Users\Muhammad_Talha\Documents\AI_Doctor_Voice_Chat_Bot\doctor_voices\output_11labs_automatic.mp3")